{"version":3,"sources":["redux/reducer.js","components/Todos.js","components/TodoItem.js","components/DisplayTodos.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["addTodoReducer","createSlice","name","initialState","reducers","addTodos","state","action","push","payload","removeTodos","filter","item","id","updateTodos","map","todo","completeTodos","completed","actions","reducer","connect","todos","dispatch","addTodo","obj","props","React","useState","setTodo","className","type","onChange","e","target","value","handleChange","motion","button","whileHover","scale","whileTap","onClick","alert","Math","floor","random","TodoItem","updateTodo","removeTodo","completeTodo","inputRef","useRef","li","initial","x","transition","duration","animate","exit","backgroundColor","ref","disabled","defaultValue","onKeyPress","which","current","update","focus","style","color","sort","setSort","AnimatePresence","length","App","h1","y","div","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc5e7975.chunk.js","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState=[];\r\n\r\nconst addTodoReducer = createSlice({\r\n    name: \"todos\",\r\n    initialState,\r\n    reducers:{\r\n//ADD TODO\r\n    addTodos:(state,action) => {\r\n        state.push(action.payload);\r\n        return state;\r\n        },\r\n//REMOVE TODO\r\n    removeTodos:(state,action)=>{\r\n    return state.filter(item=> item.id !== action.payload)\r\n    },\r\n    //UPDATE TODO\r\n    updateTodos: (state,action) => {\r\n        return state.map(todo=>{\r\n            if(todo.id === action.payload.id){\r\n                return {\r\n                    ...todo,\r\n                    item: action.payload.item,\r\n                }\r\n            }\r\n            \r\n            return todo;\r\n        })\r\n    },\r\n    //COMPLETED TODO\r\n    completeTodos: (state,action) =>{\r\n        return state.map((todo)=>{\r\n            if(todo.id=== action.payload){\r\n            return {\r\n            ...todo,\r\n            completed: true,\r\n            }\r\n        }\r\n        return todo;\r\n    });\r\n    }\r\n    }\r\n})\r\n\r\n\r\nexport const {addTodos , removeTodos , updateTodos , completeTodos} = addTodoReducer.actions;\r\nexport const reducer = addTodoReducer.reducer;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addTodos } from '../redux/reducer';\r\nimport {GoPlus} from \"react-icons/go\"\r\nimport { motion } from 'framer-motion';\r\nconst mapStatesToProps= (state) => {\r\n    return{\r\n        todos:state,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addTodo: (obj)=> dispatch(addTodos(obj)),\r\n    }\r\n}\r\n\r\nconst Todos = (props) =>{\r\nconst [todo, setTodo] = React.useState(\"\");\r\n\r\nconst handleChange=(e)=>{\r\n    setTodo(e.target.value)\r\n}\r\n\r\nconst add = () => {\r\n    if(todo === \"\"){\r\n        alert(\"Input is Empty\");\r\n    } else{\r\n        props.addTodo({\r\n            id:Math.floor(Math.random()*1000),\r\n            item:todo,\r\n            completed:false\r\n            })\r\n            setTodo(\"\");\r\n    }\r\n}\r\n\r\n    return (\r\n        <div className='addTodos'>\r\n        <input \r\n        type='text' \r\n        onChange={(e) => handleChange(e)} \r\n        className='todo-input'\r\n        value={todo}\r\n        />\r\n        <motion.button\r\n        whileHover={{scale:1.1}}\r\n        whileTap={{scale:0.9}}\r\n        className=\"add-btn\" \r\n        onClick={()=>add()}><GoPlus/></motion.button>\r\n        <br/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(Todos);\r\n","import React from 'react'\r\nimport {AiFillEdit} from \"react-icons/ai\"\r\nimport {IoCheckmarkDoneSharp , IoClose} from \"react-icons/io5\"\r\nimport { motion } from 'framer-motion';\r\n\r\nconst TodoItem = (props) => {\r\n    const {item, updateTodo, removeTodo, completeTodo} = props;\r\n\r\n    const inputRef = React.useRef(true)\r\n\r\nconst changeFocus = () => {\r\n    inputRef.current.disabled = false;\r\n    inputRef.current.focus();\r\n}\r\n\r\nconst update = (id,value,e) => {\r\n    if(e.which === 13){\r\n        //13 is keycode for enter key\r\n        updateTodo({id,item:value})\r\n        inputRef.current.disabled=true;\r\n    }\r\n}\r\n    return (\r\n        <motion.li\r\n        initial={{x:\"150vw\",transition:{type:\"spring\",duration:2}}}\r\n        animate={{x:0,transition:{type:\"spring\",duration:2}}}\r\n        whileHover={{\r\n            scale:0.9, transition:{type:\"spring\",duration:0.1}\r\n        }}\r\n        exit={{\r\n            x:\"-60vw\",\r\n            scale:[1,0],\r\n            transition: {duration:0.5},\r\n            backgroundColor:\"rgba(255,0,0,1)\"\r\n        }}\r\n        key={item.id} className=\"card\">\r\n        <textarea \r\n        ref={inputRef} \r\n        disabled={inputRef}\r\n        defaultValue={item.item}\r\n        onKeyPress={(e)=>update(item.id,inputRef.current.value,e)}\r\n        />\r\n        <div className=\"btns\">\r\n        <motion.button\r\n        whileHover={{scale:1.4}}\r\n        whileTap={{scale:0.9}}\r\n        onClick={()=>changeFocus()}>{\" \"}<AiFillEdit/>{\" \"}</motion.button>\r\n        {item.completed === false &&(\r\n            <motion.button\r\n            whileHover={{scale:1.4}}\r\n            whileTap={{scale:0.9}}\r\n            style={{color:\"green\"}} onClick={()=>completeTodo(item.id)}><IoCheckmarkDoneSharp/></motion.button>\r\n        )}\r\n        <motion.button\r\n        whileHover={{scale:1.4}}\r\n        whileTap={{scale:0.9}}\r\n        style={{color:\"red\"}} onClick={()=>removeTodo(item.id)}>{\" \"}<IoClose/></motion.button>{\" \"}\r\n        </div>\r\n        {item.completed && <span className=\"completed\">done!</span>}\r\n        </motion.li>\r\n    );\r\n};\r\n\r\nexport default TodoItem\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodos , completeTodos, removeTodos, updateTodos } from '../redux/reducer';\r\nimport TodoItem from './TodoItem';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst mapStatesToProps= (state) => {\r\n    return{\r\n        todos:state,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addTodo: (obj)=> dispatch(addTodos(obj)),\r\n        removeTodo: (id)=> dispatch(removeTodos(id)),\r\n        updateTodo: (obj) => dispatch(updateTodos(obj)),\r\n        completeTodo: (id) => dispatch(completeTodos(id)),\r\n    }\r\n}\r\n\r\nconst DisplayTodos = (props) => {\r\n    const [sort, setSort] = React.useState(\"active\")\r\n    return (\r\n        <div className=\"displaytodos\">\r\n            <div className=\"buttons\">\r\n        <motion.button\r\n        whileHover={{scale:1.4}}\r\n        whileTap={{scale:0.9}} \r\n        onClick={()=>setSort(\"active\")}\r\n        >Active</motion.button>\r\n        <motion.button\r\n        whileHover={{scale:1.4}}\r\n        whileTap={{scale:0.9}} \r\n        onClick={()=>setSort(\"completed\")}\r\n        >Completed</motion.button>\r\n        <motion.button\r\n        whileHover={{scale:1.4}}\r\n        whileTap={{scale:0.9}} \r\n        onClick={()=>setSort(\"all\")}\r\n        >All</motion.button>\r\n        </div>\r\n        <ul>\r\n            <AnimatePresence>\r\n            {\r\n                props.todos.length>0 && sort === \"active\" ?\r\n                props.todos.map(item=>{\r\n                    return(\r\n                        item.completed === false && (\r\n                        <TodoItem\r\n                            key={item.id}\r\n                            item={item}\r\n                            removeTodo={props.removeTodo}\r\n                            updateTodo={props.updateTodo}\r\n                            completeTodo={props.completeTodo}\r\n                        />\r\n                        )\r\n                    )\r\n                }) : null\r\n            }\r\n            {/*for completed items */}\r\n            {\r\n                props.todos.length>0 && sort === \"completed\" ?\r\n                props.todos.map(item=>{\r\n                    return(\r\n                        item.completed === true &&(\r\n                        <TodoItem \r\n                            key={item.id}\r\n                            item={item}\r\n                            removeTodo={props.removeTodo}\r\n                            updateTodo={props.updateTodo}\r\n                            completeTodo={props.completeTodo}\r\n                        />\r\n                        )\r\n                    )\r\n                }) : null\r\n            }\r\n            {/*for all items */}\r\n            {\r\n                props.todos.length>0 && sort === \"all\" ?\r\n                props.todos.map(item=>{\r\n                    return(\r\n                    <TodoItem\r\n                        key={item.id}\r\n                        item={item}\r\n                        removeTodo={props.removeTodo}\r\n                        updateTodo={props.updateTodo}\r\n                        completeTodo={props.completeTodo}\r\n                    />\r\n                    )\r\n                }) : null\r\n            }\r\n            </AnimatePresence>\r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(mapStatesToProps,mapDispatchToProps)(DisplayTodos)\r\n","import './App.css';\nimport './css/main.css';\nimport Todos from './components/Todos';\nimport DisplayTodos from './components/DisplayTodos';\nimport {motion} from \"framer-motion\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <motion.h1\n\n      initial={{y:-200}}\n      animate={{y:0}}\n      transition={{type:\"spring\", duration:0.5}}\n      whileHover={{scale: 1.1}}\n      >Todo App</motion.h1>\n      <motion.div\n      initial={{y:1000}}\n      animate={{y:0}}\n      transition={{type:\"spring\", duration:1}}\n      \n      >\n      <Todos/>\n      <DisplayTodos/>\n        </motion.div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst store = configureStore({\r\n    reducer:reducer\r\n})\r\n\r\nexport default store;\r\n\r\n//now connect this store to app","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\"\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n<Provider store={store}>\n  <App/>\n</Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}